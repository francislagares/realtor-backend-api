// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Home {
  id                  String       @id @default(auto()) @map("_id") @db.ObjectId
  address             String
  number_of_bedrooms  Int
  number_of_bathrooms Float
  city                String
  listed_date         DateTime     @default(now())
  price               Float
  land_size           Float
  propertyType        PropertyType
  created_at          DateTime     @default(now())
  updated_at          DateTime     @updatedAt
  User                User?        @relation(fields: [userId], references: [id])
  userId              String?      @db.ObjectId
  images              Image[]
  messages            Message[]
}

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  phone            String
  email            String
  password         String
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  user_type        UserType
  homes            Home[]
  messages         Message[]
  buyer_messages   Message[] @relation("buyer_messages")
  realtor_messages Message[] @relation("realtor_messages")
}

model Image {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  url        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Home       Home?    @relation(fields: [homeId], references: [id])
  homeId     String?  @db.ObjectId
}

model Message {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  message   String
  Home      Home?   @relation(fields: [homeId], references: [id])
  homeId    String? @db.ObjectId
  realtor   User?   @relation("realtor_messages", references: [id], fields: [userId])
  realtorId String? @db.ObjectId
  buyer     User?   @relation("buyer_messages", references: [id], fields: [userId])
  buyerId   String? @db.ObjectId
  User      User?   @relation(fields: [userId], references: [id])
  userId    String? @db.ObjectId
}

enum PropertyType {
  RESIDENTIAL
  CONDO
}

enum UserType {
  BUYER
  REALTOR
  ADMIN
}
